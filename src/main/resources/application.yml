---
server:
  port: 80
  contextPath: /

---
spring:
  profiles: local
  queries:
    users-query: select * from user where email=?
    roles-query: select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
datasource:
  fujifilm:
    url: jdbc:mysql://localhost:3306/dashboard
    username: root
    password: root
    driverClassName: com.mysql.jdbc.Driver
    defaultSchema:
    maxPoolSize: 3
    minimumIdle: 1
    idleTimeout: 600000
    maxLifetime: 1800000
    connectionTimeout: 30000
    hibernate:
      hbm2ddl.method: update
      show_sql: true
      format_sql: true
      dialect: org.hibernate.dialect.MySQLDialect
      current_session_context_class: org.springframework.orm.hibernate4.SpringSessionContext
logging:
  level:
    ROOT: ERROR
    org.springframework: ERROR
    org.hibernate.dialect: ERROR
    com.fujifilm.HL7: DEBUG
  file: D:/application.log
resources:
  static-locations: classpath:/resources/
---

spring:
  profiles: default
  queries:
    users-query: select email, password, active from user where email=?
    roles-query: select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
datasource:
  fujifilm:
    url: jdbc:mysql://10.17.0.172:3306/dashboard
    username: dashboard
    password: dashboard
    driverClassName: com.mysql.jdbc.Driver
    defaultSchema:
    maxPoolSize: 3
    minimumIdle: 1
    idleTimeout: 600000
    maxLifetime: 1800000
    connectionTimeout: 30000
    hibernate:
      hbm2ddl.method: update
      show_sql: true
      format_sql: true
      dialect: org.hibernate.dialect.MySQLDialect
      current_session_context_class: org.springframework.orm.hibernate4.SpringSessionContext
logging:
  level:
    ROOT: ERROR
    org.springframework: ERROR
    org.hibernate.dialect: ERROR
    com.fujifilm.HL7: DEBUG
  file: D:/application.log
resources:
  static-locations: classpath:/resources/